# -*- coding: utf-8 -*-
"""record_kids_first_analyze.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Orekdhl3dg8aaujVMKf7SxvCvFb_iW1C
"""

from google.colab import drive
drive.mount('/content/drive', force_remount=True)

!ls drive/MyDrive

import numpy as np#מאפשר עיבוד מהיר של מערכים מרובי ממדים ופעולות מתמטיות עליהם
import pandas as pd#משמש לניתוח ועיבוד נתונים בטבלאות, מאגרי נתונים וקבצי CSV
import re#מספק כלים לעיבוד ופעולות על טקסט באמצעות פונקציות רגולריות.
import tensorflow as tf# ספריית למידת מכונה נרחבת, תחת המודול tf.keras המאפשרת בניית רשתות עם שכבות שונות, אופטימיזציה ועוד.
from tensorflow.keras.layers import Dense, Input, Dropout
from tensorflow.keras.optimizers import Adam
from tensorflow.keras.models import Model
from tensorflow.keras.callbacks import ModelCheckpoint
import tensorflow_hub as hub

!find drive/MyDrive

!ls drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip

!unzip drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip

#עבור Laura

import zipfile
import os
import pandas as pd

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט
        if file_info.filename.endswith('.cha'):
            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if 'finished' in file_info.filename and 'Braunwald' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"
               # number = file_info.filename.split('Braunwald')[1].split('.')[0]
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'Braunwald','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

!pip install nltk

!pip install pandas nltk

import zipfile
import pandas as pd
import os
import re

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'Braunwald' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                #data_list.append({'Name:': 'Braunwald_'+number, 'sentence:': ' && '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average Sentence Length_BraunWald': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

#עבור Adam

import zipfile
import os
import pandas as pd

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט
        if file_info.filename.endswith('.cha'):
            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if 'Brown/Adam' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"
               # number = file_info.filename.split('Braunwald')[1].split('.')[0]
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'Adam','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'Brown/Adam' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)


                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                #data_list.append({'Name:': 'Adam_'+number, 'sentence:': ' && '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average Sentence Length_Adam': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

#עבור Eve

import zipfile
import os
import pandas as pd

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט
        if file_info.filename.endswith('.cha'):
            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if 'Brown/Eve' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"

                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'Eve','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'Brown/Eve' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
               # data_list.append({'Name:': 'Eve_'+number, 'Sentence:': '&& '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average Sentence Length_Eve': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import pandas as pd
import os

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []
files_count = 0
rows_count_per_file = 0

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'Brown/Eve' in file_info.filename:
            files_count +=1
            rows_count_per_file = 0
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)
                rows_count_per_file = len(content.split('\n'))


                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                data_list.append({'Name:': 'Eve','age:' : number, 'num_of_sentence:': rows_count_per_file})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)
with pd.ExcelWriter(excel_output_path, engine='openpyxl', mode='a') as writer:
    df_count = pd.DataFrame({'מספר קבצים': [files_count]})
    df_count.to_excel(writer, sheet_name='מספר קבצים', index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

#עבור sarah

import zipfile
import os
import pandas as pd

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט

            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if 'finished' in file_info.filename and 'Brown/Sarah' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"

                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'Sarah','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'Brown/Sarah' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                #data_list.append({'Name:': 'Sarah_'+number, 'Sentence:': '&& '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average Sentence Length': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import pandas as pd
import os

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []
files_count = 0
rows_count_per_file = 0

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'Brown/Sarah' in file_info.filename:
            files_count +=1
            rows_count_per_file = 0
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)
                rows_count_per_file = len(content.split('\n'))


                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                data_list.append({'Name:': 'Sarah','age:' : number, 'num_of_sentence:': rows_count_per_file})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)
with pd.ExcelWriter(excel_output_path, engine='openpyxl', mode='a') as writer:
    df_count = pd.DataFrame({'מספר קבצים': [files_count]})
    df_count.to_excel(writer, sheet_name='מספר קבצים', index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

#עבור Julia

import zipfile
import os
import pandas as pd

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט

            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if 'ComptonPater/Julia/finished' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"

                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'Julia','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'ComptonPater/Julia' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)


                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                #data_list.append({'Name:': 'Julia_'+number, 'Sentence:': ' && '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average_Sentence_Length_Julia': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import pandas as pd
import os


# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []
files_count = 0
rows_count_per_file = 0

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'ComptonPater/Julia' in file_info.filename:
            files_count +=1
            rows_count_per_file = 0
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)
                rows_count_per_file = len(content.split('\n'))


                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                data_list.append({'Name:': 'Julia','age:' : number, 'num_of_sentence:': rows_count_per_file})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)
with pd.ExcelWriter(excel_output_path, engine='openpyxl', mode='a') as writer:
    df_count = pd.DataFrame({'מספר קבצים': [files_count]})
    df_count.to_excel(writer, sheet_name='מספר קבצים', index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

#עבור sean

import zipfile
import os
import pandas as pd

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט

            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if 'ComptonPater/Sean/finished' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"

                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'Sean','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re
# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'ComptonPater/Sean' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')


                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)


                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                #data_list.append({'Name:': 'Sean_'+number, 'Sentence:': ' && '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average_Sentence_Length_sean': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import pandas as pd
import os

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []
files_count = 0
rows_count_per_file = 0

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'ComptonPater/Sean' in file_info.filename:
            files_count +=1
            rows_count_per_file = 0
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)
                rows_count_per_file = len(content.split('\n'))


                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                data_list.append({'Name:': 'Sean','age:' : number, 'num_of_sentence:': rows_count_per_file})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)
with pd.ExcelWriter(excel_output_path, engine='openpyxl', mode='a') as writer:
    df_count = pd.DataFrame({'מספר קבצים': [files_count]})
    df_count.to_excel(writer, sheet_name='מספר קבצים', index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import os
import pandas as pd

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט

            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if 'ComptonPater/Trevor/finished' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"

                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'Trevor','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'ComptonPater/Trevor' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)


                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                #data_list.append({'Name:': 'Trevor_'+number, 'Sentence:': ' && '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average_Sentence_Length_Trevor': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import pandas as pd
import os

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []
files_count = 0
rows_count_per_file = 0

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'ComptonPater/Trevor' in file_info.filename:
            files_count +=1
            rows_count_per_file = 0
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)
                rows_count_per_file = len(content.split('\n'))


                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                data_list.append({'Name:': 'Trevor','age:' : number, 'num_of_sentence:': rows_count_per_file})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)
with pd.ExcelWriter(excel_output_path, engine='openpyxl', mode='a') as writer:
    df_count = pd.DataFrame({'מספר קבצים': [files_count]})
    df_count.to_excel(writer, sheet_name='מספר קבצים', index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import os
import pandas as pd

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט

            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if '/Goad/Julia/finished' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"

                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'julia_2','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and '/Goad/Julia/finished' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)


                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                #data_list.append({'Name:': 'Julia_2_'+number, 'Sentence:': ' && '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average_Sentence_Length_Julia_2': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import pandas as pd
import os

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []
files_count = 0
rows_count_per_file = 0

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and '/Goad/Julia/finished' in file_info.filename:
            files_count +=1
            rows_count_per_file = 0
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)
                rows_count_per_file = len(content.split('\n'))


                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                data_list.append({'Name:': 'Julia_2','age:' : number, 'num_of_sentence:': rows_count_per_file})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)
with pd.ExcelWriter(excel_output_path, engine='openpyxl', mode='a') as writer:
    df_count = pd.DataFrame({'מספר קבצים': [files_count]})
    df_count.to_excel(writer, sheet_name='מספר קבצים', index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import os
import pandas as pd
import re

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט

            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if '/Goad/Sonya/finished' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"

                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Sonya','Age:': number})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re
# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and '/Goad/Sonya/finished' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)


                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                #data_list.append({'Name:': 'Sonya_'+number, 'Sentence:': ' && '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average_Sentence_Length_Sonya': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import pandas as pd
import os

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []
files_count = 0
rows_count_per_file = 0

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and '/Goad/Sonya/finished' in file_info.filename:
            files_count +=1
            rows_count_per_file = 0
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)
                rows_count_per_file = len(content.split('\n'))


                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                data_list.append({'Name:': 'Sonya','age:' : number, 'num_of_sentence:': rows_count_per_file})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)
with pd.ExcelWriter(excel_output_path, engine='openpyxl', mode='a') as writer:
    df_count = pd.DataFrame({'מספר קבצים': [files_count]})
    df_count.to_excel(writer, sheet_name='מספר קבצים', index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import os
import pandas as pd

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט

            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if 'Inkelas/E/finished' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"

                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'E','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'Inkelas/E/finished' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)


                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                #data_list.append({'Name:': 'Inkelas_'+number, 'Sentence:': ' && '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average_Sentence_Length_Inkelas': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import pandas as pd
import os

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []
files_count = 0
rows_count_per_file = 0

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'Inkelas/E/finished' in file_info.filename:
            files_count +=1
            rows_count_per_file = 0
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)
                rows_count_per_file = len(content.split('\n'))


                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                data_list.append({'Name:': 'Inkelas','age:' : number, 'num_of_sentence:': rows_count_per_file})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)
with pd.ExcelWriter(excel_output_path, engine='openpyxl', mode='a') as writer:
    df_count = pd.DataFrame({'מספר קבצים': [files_count]})
    df_count.to_excel(writer, sheet_name='מספר קבצים', index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import os
import pandas as pd

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט

            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if '/Providence/Alex/finished' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"

                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'Alex','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and '/Providence/Alex/finished' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)


                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
               # data_list.append({'Name:': 'Alex_'+number, 'Sentence:': ' && '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average_Sentence_Length_Alex': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import pandas as pd
import os

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []
files_count = 0
rows_count_per_file = 0

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and '/Providence/Alex/finished' in file_info.filename:
            files_count +=1
            rows_count_per_file = 0
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)
                rows_count_per_file = len(content.split('\n'))


                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                data_list.append({'Name:': 'Alex','age:' : number, 'num_of_sentence:': rows_count_per_file})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)
with pd.ExcelWriter(excel_output_path, engine='openpyxl', mode='a') as writer:
    df_count = pd.DataFrame({'מספר קבצים': [files_count]})
    df_count.to_excel(writer, sheet_name='מספר קבצים', index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import os
import pandas as pd

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט

            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if '/Providence/Ethan/finished' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"

                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'Ethan','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and '/Providence/Ethan/finished' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)


                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                #data_list.append({'Name:': 'Ethan_'+number, 'Sentence:': ' && '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average_Sentence_Length_Ethan': average_length})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import pandas as pd
import os

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []
files_count = 0
rows_count_per_file = 0

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and '/Providence/Ethan/finished' in file_info.filename:
            files_count +=1
            rows_count_per_file = 0
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)
                rows_count_per_file = len(content.split('\n'))


                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                data_list.append({'Name:': 'Ethan','age:' : number, 'num_of_sentence:': rows_count_per_file})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)
with pd.ExcelWriter(excel_output_path, engine='openpyxl', mode='a') as writer:
    df_count = pd.DataFrame({'מספר קבצים': [files_count]})
    df_count.to_excel(writer, sheet_name='מספר קבצים', index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import os
import pandas as pd

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט

            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if '/Providence/Lily/finished' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"

                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'Lily','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and '/Providence/Lily/finished' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)


                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                #data_list.append({'Name:': 'Lily_'+number, 'Sentence:': ' && '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average_Sentence_Length_Lily': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import pandas as pd
import os

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []
files_count = 0
rows_count_per_file = 0

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and '/Providence/Lily/finished' in file_info.filename:
            files_count +=1
            rows_count_per_file = 0
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)
                rows_count_per_file = len(content.split('\n'))


                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                data_list.append({'Name:': 'Lily','age:' : number, 'num_of_sentence:': rows_count_per_file})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)
with pd.ExcelWriter(excel_output_path, engine='openpyxl', mode='a') as writer:
    df_count = pd.DataFrame({'מספר קבצים': [files_count]})
    df_count.to_excel(writer, sheet_name='מספר קבצים', index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import os
import pandas as pd

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט

            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if '/Providence/Naima/finished' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"

                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'Naima','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and '/Providence/Naima/finished' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)


                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                #data_list.append({'Name:': 'Naima_'+number, 'Sentence:': ' && '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average_Sentence_Length_Naima': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')



import zipfile
import pandas as pd
import os

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []
files_count = 0
rows_count_per_file = 0

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and '/Providence/Naima/finished' in file_info.filename:
            files_count +=1
            rows_count_per_file = 0
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)
                rows_count_per_file = len(content.split('\n'))


                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                data_list.append({'Name:': 'Naima','age:' : number, 'num_of_sentence:': rows_count_per_file})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)
with pd.ExcelWriter(excel_output_path, engine='openpyxl', mode='a') as writer:
    df_count = pd.DataFrame({'מספר קבצים': [files_count]})
    df_count.to_excel(writer, sheet_name='מספר קבצים', index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import os
import pandas as pd


# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט

            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if '/Providence/Violet/finished' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"

                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'Violet','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and '/Providence/Violet/finished' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)


                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                #data_list.append({'Name:': 'Violet_'+number, 'Sentence:': ' && '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average_Sentence_Length_Violet': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import pandas as pd
import os

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []
files_count = 0
rows_count_per_file = 0

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and '/Providence/Violet/finished' in file_info.filename:
            files_count +=1
            rows_count_per_file = 0
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)
                rows_count_per_file = len(content.split('\n'))


                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                data_list.append({'Name:': 'Violet','age:' : number, 'num_of_sentence:': rows_count_per_file})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)
with pd.ExcelWriter(excel_output_path, engine='openpyxl', mode='a') as writer:
    df_count = pd.DataFrame({'מספר קבצים': [files_count]})
    df_count.to_excel(writer, sheet_name='מספר קבצים', index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import os
import pandas as pd

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט

            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if '/Providence/William/finished' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"

                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'William','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re
# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and '/Providence/William/finished' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)


                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                #data_list.append({'Name:': 'William_'+number, 'Sentence:': ' && '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average_Sentence_Length_William': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import pandas as pd
import os

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []
files_count = 0
rows_count_per_file = 0

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and '/Providence/William/finished' in file_info.filename:
            files_count +=1
            rows_count_per_file = 0
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)
                rows_count_per_file = len(content.split('\n'))


                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                data_list.append({'Name:': 'William','age:' : number, 'num_of_sentence:': rows_count_per_file})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)
with pd.ExcelWriter(excel_output_path, engine='openpyxl', mode='a') as writer:
    df_count = pd.DataFrame({'מספר קבצים': [files_count]})
    df_count.to_excel(writer, sheet_name='מספר קבצים', index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import os
import pandas as pd

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט

            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if 'Sachs/finished' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"

                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'Sachs','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'Sachs/finished' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)


                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                #data_list.append({'Name:': 'Sachs_'+number, 'Sentence:': ' && '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average_Sentence_Length_Sachs': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import pandas as pd
import os

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []
files_count = 0
rows_count_per_file = 0

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'Sachs/finished' in file_info.filename:
            files_count +=1
            rows_count_per_file = 0
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)
                rows_count_per_file = len(content.split('\n'))


                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                data_list.append({'Name:': 'Sachs','age:' : number, 'num_of_sentence:': rows_count_per_file})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)
with pd.ExcelWriter(excel_output_path, engine='openpyxl', mode='a') as writer:
    df_count = pd.DataFrame({'מספר קבצים': [files_count]})
    df_count.to_excel(writer, sheet_name='מספר קבצים', index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import os
import pandas as pd

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם הקובץ הוא קובץ טקסט

            # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
            if 'Suppes/finished' in file_info.filename:
                # חלץ את המספר שאחרי "BraunWaldx"

                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)

                # הוסף את הנתונים לרשימה
                data_list.append({'Name:':'Suppes','Age:': number})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
print(df)

import zipfile
import pandas as pd
import os
import re

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'Suppes/finished' in file_info.filename:
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)


                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                #data_list.append({'Name:': 'Suppes_'+number, 'Sentence:': ' && '.join(sentences[:3000]).replace('\r', '')})
                total_length = sum(len(sentence.strip()) for sentence in sentences)
                average_length = total_length / len(sentences)

                # הוסף את הנתונים לרשימה
                data_list.append({'File': file_info.filename, 'Average_Sentence_Length_Suppes': average_length})

# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# הדפס את הטבלה
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

import zipfile
import pandas as pd
import os

# נתיב לקובץ ZIP
zip_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה לשמירת נתונים
data_list = []
files_count = 0
rows_count_per_file = 0

# פתח את קובץ הZIP
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # עבור על כל קובץ בתוך הZIP
    for file_info in zip_ref.infolist():
        # בדוק אם השם של הקובץ מכיל את המילים המבוקשות
        if 'finished' in file_info.filename and 'Suppes/finished' in file_info.filename:
            files_count +=1
            rows_count_per_file = 0
            # קרא את תוכן הקובץ
            with zip_ref.open(file_info.filename) as file:
                content = file.read().decode('utf-8')

                # פצל את התוכן למשפטים כאשר כל משפט בשורה נפרדת
                sentences = content.split('\n')
                match = re.search(r'(\d+)', file_info.filename)
                if match:
                       number = match.group(1)
                rows_count_per_file = len(content.split('\n'))


                # הוסף את הנתונים לרשימה
                #data_list.append({'Name:':'Laura,'Age:': number})

                # הוסף שם ומשפטים לרשימה (עד 100 אם יש)
                data_list.append({'Name:': 'Suppes','age:' : number, 'num_of_sentence:': rows_count_per_file})


# יצור DataFrame מהרשימה
df = pd.DataFrame(data_list)

# נתיב לשמירת הקובץ אקסל
excel_output_path = 'drive/MyDrive/Colab_Notebooks/Noa.xlsx'

# שמירה של DataFrame לקובץ אקסל
df.to_excel(excel_output_path, index=False)
with pd.ExcelWriter(excel_output_path, engine='openpyxl', mode='a') as writer:
    df_count = pd.DataFrame({'מספר קבצים': [files_count]})
    df_count.to_excel(writer, sheet_name='מספר קבצים', index=False)

# נתיב מלא של הקובץ אקסל
full_excel_path = os.path.join(os.getcwd(), excel_output_path)
print(f'DataFrame נשמר בהצלחה בקובץ אקסל: {full_excel_path}')

#כאן אני מתחילה לעבוד על טבלת סיכום!!





import zipfile

# הכנס את שם הקובץ הפורק
zip_file_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'
with open("data/Providence/Violet/finished/010407.cha", "r") as file:
    content = file.read()
    print(content)

 #extracting: data/Inkelas/E/finished/000709.cha

import zipfile

# הכנס את שם הקובץ הפורק
zip_file_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# פתח את הקובץ במצב קריאה
with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:
    # כעת תוכל לראות את כל הקבצים ב-Zip ולקרוא את התוכן שלהם
    for file_info in zip_ref.infolist():
        # השם של הקובץ ב-Zip
        file_name = file_info.filename

        # קרא את התוכן של הקובץ
        with zip_ref.open(file_name) as file:
            content = file.read()
            print(f"תוכן הקובץ {file_name}:\n{content.decode('utf-8')}")

import zipfile
import os

zip_file_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# פונקציה להמרת טקסט מסוג bytes ל-UTF-8
def convert_to_utf8(text):
    return text.decode('utf-8').strip()

# רשימה לאחסון הפסקאות
paragraphs = []
current_paragraph = []

# פתח את ה-ZIP וחפש קבצים שמסתיימים ב".cha"
with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:
    for file_name in zip_ref.namelist():
        if file_name.endswith(".cha"):
            # קריאת תוכן הקובץ ישירות מתוך ה-ZIP
            with zip_ref.open(file_name) as file:
                # עבור על כל שורה בקובץ
                for line in file:
                    # בדיקה האם השורה מתחילה ב"*CHI:"
                    if line.startswith(b'*CHI:'):
                        # הוסף את השורה לרשימה הנוכחית של הפסקה
                        current_paragraph.append(convert_to_utf8(line))
                    else:
                        # אם השורה לא מתחילה ב"*CHI:", הוסף את הפסקה הנוכחית לרשימת הפסקאות
                        if current_paragraph:
                            paragraphs.append(" ".join(current_paragraph))
                            current_paragraph = []

# הדפסת הפסקאות
for paragraph in paragraphs:
    print(paragraph)

import zipfile
import pandas as pd

# נתיב לקובץ ZIP
zip_file_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה שתכיל את כל המשפטים שמכילים את המילה "finished"
sentences = []

# פתח את ה-ZIP וקבל את כל המשפטים מהקבצים
with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:
    for file_name in zip_ref.namelist():
        if '.kwal.cex' in file_name:
            with zip_ref.open(file_name) as file:
                content = file.read().decode('utf-8')
                print(content)
                # פצל את התוכן למשפטים
                #file_sentences = content.split('.')
                # הוסף את המשפטים לרשימה
               # sentences.extend([sentence.strip() if ';' not in sentence else 'Replacement sentence' for sentence in file_sentences])

# מצא את 1000 המשפטים הארוכים ביותר
#longest_sentences = sorted(sentences, key=len, reverse=True)[:1000]

# יצירת DataFrame מתוך המשפטים
#df = pd.DataFrame({'Sentence': longest_sentences})

# שמירת DataFrame לקובץ Excel
#excel_file_path = 'drive/MyDrive/Colab_Notebooks/Noa/longest_sentences_replaced.xlsx'
#df.to_excel(excel_file_path, index=False)

#print(f"The 1000 longest sentences with replacement for ';' have been saved to: {excel_file_path}")

import zipfile
import pandas as pd

# נתיב לקובץ ZIP
zip_file_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# רשימה שתכיל את כל המשפטים שמכילים את המילה "finished"
sentences = []

# פתח את ה-ZIP וקבל את כל המשפטים מהקבצים
with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:
    for file_name in zip_ref.namelist():
        if '' in file_name and file_name.endswith('.cha'):
            with zip_ref.open(file_name) as file:
                content = file.read().decode('utf-8')
                # פצל את התוכן למשפטים
                file_sentences = content.split('.')
                # הוסף את המשפטים לרשימה
                sentences.extend([sentence.strip() if ';' not in sentence else 'Replacement sentence' for sentence in file_sentences])

#ייצוא לקובץ אקסל
import pandas as pd

# הנתונים מהקובץ
data = {
    'CMDI_PID': ['11312/c-00044050-1'],
    'Title': ['English Braunwald Corpus'],
    'Creator': ['Braunwald, Susan'],
    'Subject': ['child language development'],
    'Subject_olac_linguistic-field': ['language_acquisition'],
    'Subject_olac_language': ['eng'],
    'Subject_childes_participant': ['age="2 - 5"'],
    'Description': ['case study'],
    'Publisher': ['TalkBank']
}

# יצירת DataFrame
df = pd.DataFrame(data)

# שמירה של DataFrame לקובץ CSV בנתיב מסוים
output_path = 'drive/MyDrive/Colab_Notebooks/Noa/metadata_output.csv'
df.to_csv(output_path, index=False)

import os
import zipfile
from openpyxl import Workbook

# פונקציה לקריאת משפטים מקובץ
def read_sentences(file_path):
    with open(file_path, 'r', encoding='utf-8') as file:
        sentences = [line.strip() for line in file.readlines()]
    return sentences

# פונקציה לחיפוש בקבצים וסידור משפטים לפי אורך
def find_and_sort_sentences(folder_path, keyword, num_sentences):
    print(f"Searching in: {folder_path}")

    sentences = []

    for root, dirs, files in os.walk(folder_path):
        print(f"Searching in file: {root}")
        for file in files:
            if keyword in file:
                file_path = os.path.join(root, file)
                print(f"Processing file: {file_path}")
                file_sentences = read_sentences(file_path)
                sentences.extend(file_sentences)

    sorted_sentences = sorted(sentences, key=len, reverse=True)
    return sorted_sentences[:num_sentences]

# פונקציה לשמירת משפטים בקובץ Excel
def save_to_excel(sentences, excel_file):
    wb = Workbook()
    ws = wb.active
    ws.append(["Sentence"])

    for sentence in sentences:
        ws.append([sentence])

    wb.save(excel_file)

# הגדרת נתיב לקובץ zip
zip_file_path = '/content/drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# נתיב שבו יתבצע אירוח הקבצים
extracted_folder_path = '/content/extracted_data'

# פתיחת קובץ ה-Zip וחילוץ הקבצים
with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:
    zip_ref.extractall(extracted_folder_path)

# חיפוש ומיון המשפטים ושמירתם בקובץ Excel
keyword = "finished"
num_sentences = 1000
excel_file = '/content/output.xlsx'

selected_sentences = find_and_sort_sentences(extracted_folder_path, keyword, num_sentences)
save_to_excel(selected_sentences, excel_file)

#הדפסת דוגמא
import os

file_path = 'data/Brown/Adam/finished/050212.kwal.flo.cex'
if os.path.exists(file_path):
    with open(file_path, 'r') as file:
        content = file.read()
        print(content)


else:
    print(f"The file {file_path} does not exist.")

import zipfile
import os

# הנתיב לקובץ ה-zip
zip_file_path = 'drive/MyDrive/Colab_Notebooks/Noa/data.zip'

# תיקייה לשמירת קבצי ה-zip
extracted_dir = 'drive/MyDrive/Colab_Notebooks/Noa/extracted'

# יצירת ספרייה אם אינה קיימת
os.makedirs(extracted_dir, exist_ok=True)

# פתיחת קובץ ה-zip
with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:
    # פיצול כל הקבצים
    zip_ref.extractall(extracted_dir)

# הדפסת התוכן של הקובץ הראשון
first_file_path = os.path.join(extracted_dir, os.listdir(extracted_dir)[0], "0metadata.cdc")

with open(first_file_path, 'r') as first_file:
    content = first_file.read()
    print(content)

import os
import pandas as pd

# תיקיית הקבצים
directory = 'drive/MyDrive/Colab_Notebooks/Noa/extracted'

# יצירת DataFrame ריק
df = pd.DataFrame(columns=['Sentence'])

# עבור כל קובץ בתיקייה
for filename in os.listdir(directory):
    if "finished" in filename:
        file_path = os.path.join(directory, filename)
        print(f"Processing file: {file_path}")

        # הוסף שורה זו לבדיקה שהשם של הקובץ יודפס
        print(f"Filename: {filename}")

        # קריאת התוכן מהקובץ
        with open(file_path, 'r') as file:
            content = file.read()

        # פיצול התוכן למשפטים
        sentences = content.split('.')

        # הוספת המשפטים ל-DataFrame והדפסתם
        for sentence in sentences:
            df = pd.concat([df, pd.DataFrame([sentence], columns=['Sentence'])])
            print(sentence)
            break  # עצירה לאחר הדפסת המשפט הראשון

# הוספת אורך לכל משפט והמרת העמודה לסוג מספר שלם
df['Length'] = df['Sentence'].apply(len).astype(int)

# מיון ויצוא של 1000 המשפטים הארוכים ביותר
top_sentences = df.nlargest(1000, 'Length')['Sentence']

# יצוא לקובץ אקסל
output_excel_path = 'drive/MyDrive/Colab_Notebooks/Noa/output.xlsx'
top_sentences.to_excel(output_excel_path, index=False, header=False)

'drive/MyDrive/Colab_Notebooks/length_and_non_english/Braunwald_data_analysis_result_formatted.xlsx