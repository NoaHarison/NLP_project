# -*- coding: utf-8 -*-
"""different_words.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15KD2UVvC07vJIq9y71Z8iire9CjDFbs1
"""

import nltk

pip install nltk

nltk.download('words')

from google.colab import drive
drive.mount('/content/drive', force_remount=True)

!ls drive/MyDrive

#האם מילה באנגלית או לא

import re
from nltk.corpus import words

# Load English words from NLTK corpus
english_words = set(words.words())

def is_english_word(word):
    """
    Check if a word is an English word.
    """
    # Remove non-alphabetic characters
    word = re.sub(r'[^a-zA-Z]', '', word)

    # Check if word is in the English word list
    return word.lower() in english_words

def detect_non_english_words(text):
    """
    Detect non-English words in a given text.
    """
    non_english_words = []

    # Split text into words
    words = re.findall(r'\w+', text)

    for word in words:
        if not is_english_word(word):
            non_english_words.append(word)

    return non_english_words


print(is_english_word("hello"))

#קבלת מספר וספירה כמה אנגלית וכמה לא
import re
from nltk.corpus import words

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

def count_english_non_english_words(text):
    words = re.findall(r'\w+', text)
    english_count = 0
    non_english_count = 0

    for word in words:
        if is_english_word(word):
            english_count += 1
        else:
            non_english_count += 1

    return english_count, non_english_count

# Example usage
sentence = input("Enter a sentence: ")
english_words_count, non_english_words_count = count_english_non_english_words(sentence)

print(f"Number of English words: {english_words_count}")
print(f"Number of non-English words: {non_english_words_count}")



#ניסיון לא נתן כלום כרגע
import re
from nltk.corpus import words
from collections import Counter
from decimal import Decimal, ROUND_HALF_UP

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

def calculate_english_ttr(text):
    # Remove punctuation marks
    text = re.sub(r'[^\w\s]', '', text)

    # Split text into words, keeping hyphenated words together
    words = re.findall(r'\w+(?:-\w+)*', text)

    # Filter out non-English words
    english_words = [word for word in words if is_english_word(word)]

    # Count unique English words
    unique_english_words = len(set(english_words))

    # Count total English words
    total_english_words = len(english_words)

    # Calculate TTR for English words
    if total_english_words == 0:
        english_ttr = Decimal('0')
    else:
        english_ttr = Decimal(unique_english_words) / Decimal(total_english_words)
        english_ttr = english_ttr.quantize(Decimal('.01'), rounding=ROUND_HALF_UP)

    return f"Type-Token Ratio for English words: {english_ttr}"

# Example usage
sample_text = "mgmg< love-me love love hjhjtjt me !"
print(calculate_english_ttr(sample_text))

!find drive/MyDrive

!ls drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip

!unzip drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip

#ניסיון לא נתן כלום כרגע
import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter
from decimal import Decimal, ROUND_HALF_UP

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

def calculate_english_ttr(text):
    # Remove punctuation marks
    text = re.sub(r'[^\w\s]', '', text)

    # Split text into words, keeping hyphenated words together
    words = re.findall(r'\w+(?:-\w+)*', text)

    # Filter out non-English words
    english_words = [word for word in words if is_english_word(word)]

    # Count unique English words
    unique_english_words = len(set(english_words))

    # Count total English words
    total_english_words = len(english_words)

    # Calculate TTR for English words
    if total_english_words == 0:
        english_ttr = Decimal('0')
    else:
        english_ttr = Decimal(unique_english_words) / Decimal(total_english_words)
        english_ttr = english_ttr.quantize(Decimal('.01'), rounding=ROUND_HALF_UP)

    return f"Type-Token Ratio for English words: {english_ttr}"

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'

# List to store file contents and number sequences
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and 'Brown/Sarah' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Calculate TTR for each sentence
            ttr_values = [calculate_english_ttr(sentence) for sentence in sentences]
            # Add sentences and TTR values to the list
            file_contents.extend([(sentence, file_nums, ttr) for sentence, ttr in zip(sentences, ttr_values)])

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active

# Write column headers
worksheet['A1'] = 'Text'
worksheet['B1'] = 'Number Sequence'
worksheet['C1'] = 'TTR'

# Write data to the worksheet
for row, (text, file_nums, ttr) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=text)
    worksheet.cell(row=row, column=2, value=file_nums)
    worksheet.cell(row=row, column=3, value=ttr)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")





#מכאן ואילך רלוונטי
import re
from nltk.corpus import words
from decimal import Decimal, ROUND_HALF_UP

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

def calculate_english_ttr(text):
    # Remove punctuation marks
    text = re.sub(r'[^\w\s]', '', text)

    # Split text into words, keeping hyphenated words together
    words = re.findall(r'\w+(?:-\w+)*', text)

    # Filter out non-English words
    english_words = [word for word in words if is_english_word(word)]

    # Count unique English words
    unique_english_words = len(set(english_words))

    # Count total English words
    total_english_words = len(english_words)

    # Calculate TTR for English words
    if total_english_words == 0:
        english_ttr = Decimal('0')
    else:
        english_ttr = Decimal(unique_english_words) / Decimal(total_english_words)
        english_ttr = english_ttr.quantize(Decimal('.01'), rounding=ROUND_HALF_UP)

    return f"Type-Token Ratio for English words: {english_ttr}"

# Get a sentence from the user
sentence = input("Enter a sentence: ")

# Calculate and print the TTR for the sentence
ttr = calculate_english_ttr(sentence)
print(ttr)

import pandas as pd
import matplotlib.pyplot as plt

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/TTR_SARAH.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['TTR'], color='blue', alpha=0.5)
plt.title('Sarah: TTR vs. Age')
plt.xlabel('Age')
plt.ylabel('TTR')
plt.grid(True)
plt.show()

#מכאן ואילך רלוונטי
import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter
from decimal import Decimal, ROUND_HALF_UP

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return all(part.lower() in english_words for part in word.split())

def calculate_english_ttr(text):
    # Remove punctuation marks
    text = re.sub(r'[^\w\s]', '', text)
    # Split text into words, keeping hyphenated words together
    words = re.findall(r'\w+(?:-\w+)*', text)
    # Filter out non-English words
    english_words = [word for word in words if is_english_word(word)]
    # Count unique English words
    unique_english_words = len(set(english_words))
    # Count total English words
    total_english_words = len(english_words)
    # Calculate TTR for English words
    if total_english_words == 0:
        english_ttr = Decimal('0')
    else:
        english_ttr = Decimal(unique_english_words) / Decimal(total_english_words)
        english_ttr = english_ttr.quantize(Decimal('.01'), rounding=ROUND_HALF_UP)
    return f"Type-Token Ratio for English words: {english_ttr}"

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number sequences
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and 'Brown/Sarah' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Calculate TTR for each sentence
            ttr_values = [calculate_english_ttr(sentence) for sentence in sentences]
            # Add sentences and TTR values to the list
            file_contents.extend([(sentence, file_nums, ttr) for sentence, ttr in zip(sentences, ttr_values)])

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Text'
worksheet['B1'] = 'Number Sequence'
worksheet['C1'] = 'TTR'
# Write data to the worksheet
for row, (text, file_nums, ttr) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=text)
    worksheet.cell(row=row, column=2, value=file_nums)
    worksheet.cell(row=row, column=3, value=ttr)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

#מכאן ואילך ניסיון לחשב סתם כמה מילים שונות באנגלית נאמרו בשיחה, לפני כן יש הסרה של מילים לא באנגלית
import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and 'Brown/Sarah' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_SARAH.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('Sarah: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and 'Brown/Adam' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_ADAM.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('ADAM: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
      if file_info.filename.endswith('.cha'):
        # Check if the file is a text file
        if 'finished' in file_info.filename and 'Braunwald' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_Braunwald.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('Braunwald: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and 'Brown/Eve' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_EVE.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('EVE: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and 'ComptonPater/Julia' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_Julia.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('Julia: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and 'ComptonPater/Sean' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_Sean.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('Sean: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and 'ComptonPater/Trevor' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_Trevor.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('Trevor: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and '/Goad/Julia/finished' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_Julia_2.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('Julia_2: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and '/Goad/Sonya/finished' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_Sonya.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('Sonya: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and 'Inkelas/E/finished' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_Inkelas.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('Inkelas: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and '/Providence/Alex/finished' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_Alex.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('Alex: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and '/Providence/Ethan/finished' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_Ethan.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('Ethan: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and '/Providence/Lily/finished' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_Lily.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('Lily: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and '/Providence/Violet/finished' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_Violet.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('Violet: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and '/Providence/William/finished' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_William.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('William: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and 'Sachs/finished' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_Sachs.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('Sachs: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and 'Suppes/finished' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_Suppes.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('Suppes: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()

import zipfile
import os
import pandas as pd
from openpyxl import Workbook
import re
from nltk.corpus import words
from collections import Counter

english_words = set(words.words())

def is_english_word(word):
    word = re.sub(r'[^a-zA-Z]', '', word)
    return word.lower() in english_words

# Path to the ZIP file
zip_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/record_kids_data/data.zip'
# List to store file contents and number of unique English words
file_contents = []

# Open the ZIP file
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    # Loop through each file in the ZIP
    for file_info in zip_ref.infolist():
        # Check if the file is a text file
        if 'finished' in file_info.filename and '/Providence/Naima/finished' in file_info.filename:
            # Read the file contents
            with zip_ref.open(file_info.filename) as file:
                contents = file.read().decode('utf-8')
            # Split the contents into sentences (each line is a sentence)
            sentences = contents.split('\\n')
            # Get the number sequence from the file name
            file_nums = ''.join(filter(str.isdigit, file_info.filename))
            # Filter out non-English words from each sentence
            english_words_list = []
            for sentence in sentences:
                words = re.findall(r'\w+(?:-\w+)*', sentence)
                english_words_list.extend([word for word in words if is_english_word(word)])
            # Count unique English words
            unique_english_words = len(set(english_words_list))
            # Add the number of unique English words to the list
            file_contents.append((file_nums, unique_english_words))

# Create a new Excel file
workbook = Workbook()
worksheet = workbook.active
# Write column headers
worksheet['A1'] = 'Number Sequence'
worksheet['B1'] = 'Unique English Words'
# Write data to the worksheet
for row, (file_nums, unique_english_words) in enumerate(file_contents, start=2):
    worksheet.cell(row=row, column=1, value=file_nums)
    worksheet.cell(row=row, column=2, value=unique_english_words)

# Save the Excel file
excel_file_path = 'drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english.xlsx'
workbook.save(excel_file_path)
print(f"Excel file saved successfully: {excel_file_path}")

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# קריאת הנתונים מקובץ ה-Excel
data_df = pd.read_excel('drive/MyDrive/bioinformatica/Colab_Notebooks/final_project/basic_analayze_data/different_word_in_english/TRY_Naima.xlsx')

# יצירת גרף scatter
plt.figure(figsize=(10, 6))
plt.scatter(data_df['age'], data_df['Unique English Words'], color='blue', alpha=0.5)

# התאמת קו מגמה (עקומת ריבוע)
coeffs = np.polyfit(data_df['age'], data_df['Unique English Words'], 2)
poly = np.poly1d(coeffs)
x_range = np.linspace(data_df['age'].min(), data_df['age'].max(), 100)
y_range = poly(x_range)

# הצגת קו המגמה
plt.plot(x_range, y_range, color='red')

plt.title('Naima: Unique English Words vs. Age')
plt.xlabel('Age')
plt.ylabel('Unique English Words')
plt.grid(True)
plt.show()
